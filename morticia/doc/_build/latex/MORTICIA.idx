\indexentry{optics (module)|hyperpage}{15}
\indexentry{Lens (class in optics)|hyperpage}{15}
\indexentry{\_\_init\_\_() (optics.Lens method)|hyperpage}{16}
\indexentry{mtf\_obs\_wfe() (optics.Lens method)|hyperpage}{17}
\indexentry{atf() (in module optics)|hyperpage}{17}
\indexentry{autocorr\_circle() (in module optics)|hyperpage}{17}
\indexentry{crosscorr\_circle() (in module optics)|hyperpage}{18}
\indexentry{ctf\_eye() (in module optics)|hyperpage}{18}
\indexentry{mtf() (in module optics)|hyperpage}{18}
\indexentry{mtf\_obs() (in module optics)|hyperpage}{18}
\indexentry{n\_air() (in module optics)|hyperpage}{19}
\indexentry{patf() (in module optics)|hyperpage}{19}
\indexentry{pmtf() (in module optics)|hyperpage}{19}
\indexentry{pmtf\_obs() (in module optics)|hyperpage}{20}
\indexentry{pmtf\_obs\_wfe() (in module optics)|hyperpage}{20}
\indexentry{electro (module)|hyperpage}{20}
\indexentry{Camera (class in electro)|hyperpage}{20}
\indexentry{\_\_init\_\_() (electro.Camera method)|hyperpage}{21}
\indexentry{FocalPlaneArray (class in electro)|hyperpage}{22}
\indexentry{\_\_init\_\_() (electro.FocalPlaneArray method)|hyperpage}{23}
\indexentry{compute\_mtf() (electro.FocalPlaneArray method)|hyperpage}{24}
\indexentry{set\_dark\_current() (electro.FocalPlaneArray method)|hyperpage}{24}
\indexentry{Imager (class in electro)|hyperpage}{24}
\indexentry{\_\_init\_\_() (electro.Imager method)|hyperpage}{24}
\indexentry{xd\_asr2sqe() (in module electro)|hyperpage}{24}
\indexentry{xd\_sqe2asr() (in module electro)|hyperpage}{25}
\indexentry{librad (module)|hyperpage}{25}
\indexentry{Case (class in librad)|hyperpage}{25}
\indexentry{\_\_init\_\_() (librad.Case method)|hyperpage}{26}
\indexentry{alter\_option() (librad.Case method)|hyperpage}{27}
\indexentry{append\_option() (librad.Case method)|hyperpage}{27}
\indexentry{del\_option() (librad.Case method)|hyperpage}{27}
\indexentry{distribute\_flux\_data() (librad.Case method)|hyperpage}{27}
\indexentry{irrad\_units\_str() (librad.Case method)|hyperpage}{27}
\indexentry{merge\_caselist\_by\_wavelength() (librad.Case static method)|hyperpage}{27}
\indexentry{prepare\_for\_keyword() (librad.Case method)|hyperpage}{28}
\indexentry{prepare\_for\_mol\_abs\_param() (librad.Case method)|hyperpage}{28}
\indexentry{prepare\_for\_output\_process() (librad.Case method)|hyperpage}{28}
\indexentry{prepare\_for\_polradtran() (librad.Case method)|hyperpage}{28}
\indexentry{prepare\_for\_source() (librad.Case method)|hyperpage}{28}
\indexentry{process\_outputs() (librad.Case method)|hyperpage}{28}
\indexentry{rad\_units\_str() (librad.Case method)|hyperpage}{28}
\indexentry{read() (librad.Case static method)|hyperpage}{28}
\indexentry{readerr() (librad.Case method)|hyperpage}{29}
\indexentry{readout() (librad.Case method)|hyperpage}{29}
\indexentry{run() (librad.Case method)|hyperpage}{30}
\indexentry{set\_option() (librad.Case method)|hyperpage}{31}
\indexentry{set\_view\_geometry() (librad.Case method)|hyperpage}{31}
\indexentry{set\_wavelength\_grid() (librad.Case method)|hyperpage}{31}
\indexentry{split\_case\_by\_wavelength() (librad.Case method)|hyperpage}{32}
\indexentry{unset\_wavelength\_grid() (librad.Case method)|hyperpage}{32}
\indexentry{write() (librad.Case method)|hyperpage}{32}
\indexentry{HyperRadEnv (class in librad)|hyperpage}{32}
\indexentry{\_\_init\_\_() (librad.HyperRadEnv method)|hyperpage}{33}
\indexentry{RadEnv (class in librad)|hyperpage}{34}
\indexentry{\_\_init\_\_() (librad.RadEnv method)|hyperpage}{35}
\indexentry{compute\_path\_radiance() (librad.RadEnv method)|hyperpage}{36}
\indexentry{compute\_path\_transmittance() (librad.RadEnv method)|hyperpage}{37}
\indexentry{run\_ipyparallel() (librad.RadEnv method)|hyperpage}{37}
\indexentry{run\_parallel() (librad.RadEnv method)|hyperpage}{37}
\indexentry{setup\_trans\_cases() (librad.RadEnv method)|hyperpage}{37}
\indexentry{sph\_harm\_fat() (librad.RadEnv method)|hyperpage}{38}
\indexentry{sph\_harm\_fit() (librad.RadEnv method)|hyperpage}{38}
\indexentry{write\_openexr() (librad.RadEnv method)|hyperpage}{39}
\indexentry{angstrom\_law() (in module librad)|hyperpage}{40}
\indexentry{angstrom\_law\_fit() (in module librad)|hyperpage}{40}
\indexentry{king\_byrne\_formula() (in module librad)|hyperpage}{40}
\indexentry{king\_byrne\_formula\_fit() (in module librad)|hyperpage}{41}
\indexentry{koschmieder\_vis() (in module librad)|hyperpage}{41}
\indexentry{lookup\_nearest\_in\_file() (in module librad)|hyperpage}{41}
\indexentry{radute (module)|hyperpage}{42}
\indexentry{Flt (class in radute)|hyperpage}{42}
\indexentry{\_\_init\_\_() (radute.Flt method)|hyperpage}{43}
\indexentry{checkparm() (radute.Flt static method)|hyperpage}{43}
\indexentry{flt\_as\_xd() (radute.Flt method)|hyperpage}{44}
\indexentry{flt\_as\_xd\_harmonised() (radute.Flt method)|hyperpage}{44}
\indexentry{plot() (radute.Flt method)|hyperpage}{44}
\indexentry{read() (radute.Flt method)|hyperpage}{44}
\indexentry{write() (radute.Flt method)|hyperpage}{44}
\indexentry{SpectralDistribution (class in radute)|hyperpage}{44}
\indexentry{\_\_init\_\_() (radute.SpectralDistribution method)|hyperpage}{44}
\indexentry{avhrr\_kratz() (radute.SpectralDistribution class method)|hyperpage}{45}
\indexentry{decimate\_resolution() (radute.SpectralDistribution method)|hyperpage}{45}
\indexentry{fu() (radute.SpectralDistribution class method)|hyperpage}{45}
\indexentry{kato() (radute.SpectralDistribution class method)|hyperpage}{45}
\indexentry{sensor\_channel() (radute.SpectralDistribution class method)|hyperpage}{45}
\indexentry{spectral\_slice() (radute.SpectralDistribution class method)|hyperpage}{45}
\indexentry{SpectralSpace (class in radute)|hyperpage}{46}
\indexentry{from\_flt\_file() (radute.SpectralSpace class method)|hyperpage}{46}
\indexentry{readOpenEXR() (in module radute)|hyperpage}{46}
\indexentry{srfgen() (in module radute)|hyperpage}{46}
\indexentry{tophat() (in module radute)|hyperpage}{47}
